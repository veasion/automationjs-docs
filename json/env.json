{
  "source": "..\\docs\\env.md",
  "modules": [
    {
      "textRaw": "EnvironmentBinding",
      "name": "environmentbinding",
      "desc": "<p>该类用来操作环境变量，可以直接通过 env 访问。</p>\n<p>配置文件 <code>config.json</code> 中的配置会默认加载到 env 全局变量中，可以直接获取，如 <code>env.getString(&#39;USER_NAME&#39;)</code></p>\n",
      "methods": [
        {
          "textRaw": "put(key, value)",
          "type": "method",
          "name": "put",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                },
                {
                  "textRaw": "`value` {string} value ",
                  "name": "value",
                  "type": "string",
                  "desc": "value"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                },
                {
                  "name": "value"
                }
              ]
            }
          ],
          "desc": "<p>存储变量 (当前脚本运行环境，非全局)</p>\n"
        },
        {
          "textRaw": "putGlobal(key, value)",
          "type": "method",
          "name": "putGlobal",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                },
                {
                  "textRaw": "`value` {string} value ",
                  "name": "value",
                  "type": "string",
                  "desc": "value"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                },
                {
                  "name": "value"
                }
              ]
            }
          ],
          "desc": "<p>存储全局变量</p>\n"
        },
        {
          "textRaw": "get(key)",
          "type": "method",
          "name": "get",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                },
                {
                  "textRaw": "{Object} ",
                  "type": "Object"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                }
              ]
            }
          ],
          "desc": "<p>获取变量</p>\n"
        },
        {
          "textRaw": "getString(key)",
          "type": "method",
          "name": "getString",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                },
                {
                  "textRaw": "{string} ",
                  "type": "string"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                }
              ]
            }
          ],
          "desc": "<p>获取变量</p>\n"
        },
        {
          "textRaw": "getOrDefault(key, defaultVal)",
          "type": "method",
          "name": "getOrDefault",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                },
                {
                  "textRaw": "`defaultVal` {Object} defaultVal 默认值（取不到数据时返回该值） ",
                  "name": "defaultVal",
                  "type": "Object",
                  "desc": "defaultVal 默认值（取不到数据时返回该值）"
                },
                {
                  "textRaw": "{Object} ",
                  "type": "Object"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                },
                {
                  "name": "defaultVal"
                }
              ]
            }
          ],
          "desc": "<p>获取变量</p>\n"
        },
        {
          "textRaw": "remove(key)",
          "type": "method",
          "name": "remove",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`key` {string} key ",
                  "name": "key",
                  "type": "string",
                  "desc": "key"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "key"
                }
              ]
            }
          ],
          "desc": "<p>移除当前变量 （本地变量，非全局）</p>\n"
        },
        {
          "textRaw": "translate(str)",
          "type": "method",
          "name": "translate",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`str` {string} 表达式 ",
                  "name": "str",
                  "type": "string",
                  "desc": "表达式"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "str"
                }
              ]
            }
          ],
          "desc": "<p>解析表达式</p>\n<pre><code class=\"lang-js\">env.put(&quot;name&quot;, &quot;veasion&quot;);\nenv.translate(&quot;hello ${name}&quot;); // hello veasion\n</code></pre>\n"
        },
        {
          "textRaw": "translate(str, object)",
          "type": "method",
          "name": "translate",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`str` {string} 表达式 ",
                  "name": "str",
                  "type": "string",
                  "desc": "表达式"
                },
                {
                  "textRaw": "`object` {Object} 对象 ",
                  "name": "object",
                  "type": "Object",
                  "desc": "对象"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "str"
                },
                {
                  "name": "object"
                }
              ]
            }
          ],
          "desc": "<p>解析表达式</p>\n<pre><code class=\"lang-js\">env.translate(&quot;hello ${name}&quot;, { name: &#39;veasion&#39; }); // hello veasion\n</code></pre>\n"
        },
        {
          "textRaw": "getPath(path)",
          "type": "method",
          "name": "getPath",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`path` {string} 路径 ",
                  "name": "path",
                  "type": "string",
                  "desc": "路径"
                },
                {
                  "textRaw": "{string} ",
                  "type": "string"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "path"
                }
              ]
            }
          ],
          "desc": "<p>获取class决定路径</p>\n<pre><code class=\"lang-js\">// 如代码在 D:\\projects\\automation_testing 运行\nenv.getPath(&#39;/common/proxy.js&#39;); // D:\\projects\\automation_testing\\target\\classes\\common\\proxy.js\n</code></pre>\n"
        },
        {
          "textRaw": "getSourcePath(path)",
          "type": "method",
          "name": "getSourcePath",
          "signatures": [
            {
              "params": [
                {
                  "textRaw": "`path` {string} 路径 ",
                  "name": "path",
                  "type": "string",
                  "desc": "路径"
                },
                {
                  "textRaw": "{string} ",
                  "type": "string"
                }
              ]
            },
            {
              "params": [
                {
                  "name": "path"
                }
              ]
            }
          ],
          "desc": "<p>获取源文件绝对路径</p>\n<pre><code class=\"lang-js\">// 如代码在 D:\\projects\\automation_testing 运行\nenv.getSourcePath(&#39;/common/proxy.js&#39;); // D:\\projects\\automation_testing\\src\\main\\resources\\common\\proxy.js\n</code></pre>\n"
        }
      ],
      "type": "module",
      "displayName": "EnvironmentBinding"
    },
    {
      "textRaw": "获取常用按键 KEY",
      "name": "获取常用按键_key",
      "desc": "<p>env 可以直接获取常用按键，如回车按键 <code>env.get(&#39;KEY_ENTER&#39;)</code></p>\n<p>支持以下按键获取：</p>\n<p><code>KEY_BACK_SPACE</code>\n<code>KEY_TAB</code>\n<code>KEY_ENTER</code>\n<code>KEY_SHIFT</code>\n<code>KEY_CONTROL</code>\n<code>KEY_ALT</code>\n<code>KEY_ESCAPE</code>\n<code>KEY_PAGE_UP</code>\n<code>KEY_PAGE_DOWN</code>\n<code>KEY_END</code>\n<code>KEY_HOME</code>\n<code>KEY_ARROW_LEFT</code>\n<code>KEY_ARROW_UP</code>\n<code>KEY_ARROW_RIGHT</code>\n<code>KEY_ARROW_DOWN</code>\n<code>KEY_F12</code></p>\n",
      "type": "module",
      "displayName": "获取常用按键 KEY"
    }
  ]
}